/*
4. Crie uma função ordenaPalavra que recebe um cadeia de caracteres s,
formada apenas por letras minúsculas e dígitos, e ordena os caracteres
de s de acordo com o seguinte critério:
(a) Os dígitos devem aparecer antes das letras.
(b) Após aplicar o primeiro critério, as letras e os dígitos devem ser
ordenadas em ordem decrescente.
Escreva as funções auxiliares que achar necessário. A entrada e saída
de dados deve ser realizada na função principal.
- Entrada: ”b0l4”
- Saída: ”40lb”
- Entrada: ”t0m4t3”
- Saída: ”430ttm”

*/


#include <iostream>
#include <ctype.h>
#include <cstring >
#include <cmath>
#define TAM 50
using namespace std;
char text[TAM];

void ordenaString(char str[]){
    char aux;
    for(int j = 1; j < strlen(str); j++ ){
        aux = str[j];
       int i = j - 1;
            while((i >= 0) && (aux > str[i]) ){
                str[i+1] = str[i] ;
                i--;
            }
            str[i+1] = aux;
    }
}
void ordenaPalavra2(char texto[]){
    char alpha[strlen(texto)] = {}, digit[strlen(texto)]={};
    int cont1 = 0;
    int cont2 = 0;
    int cont3 = 0;
    for(int i = 0; i < strlen(texto); i++){
        if(texto[i] >= 97  ){
            alpha[cont1] = texto[i];
            cont1++;
        }
        else{
            digit[cont2] = texto[i];
            cont2++;
        }
    }
    ordenaString(alpha);
    cout << alpha << endl;
    ordenaString(digit);
    cout << digit << endl;


    for(int i = 0; i < strlen(digit); i++){
        texto[cont3] = digit[i];
        cont3++;
    }
    for(int i = 0; i < strlen(alpha); i++){
        texto[cont3] = alpha[i];
        cont3++;
    }
}

int main()
{
     cin. getline (text , TAM );
    ordenaPalavra2(text);
    cout << text;
    return 0;
}
